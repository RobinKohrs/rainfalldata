library(raster)
library(RNetCDF)
library(ncdf4)
library(ncdf.tools)
library(ncdf4.helpers)
library(rasterVis)
library(lubridate)
library(scales)
library(ggplot2)
library(ncdf.tools)
remotes::install_github("git@github.com:cran/ncdf.tools.git")
install.packages("../../../Desktop/JBTools_0.7.2.6.tar.gz", repos = NULL, type="source")
remotes::install_github("git@github.com:cran/ncdf.tools.git")
install.packages("request")
library(rjson)
#--------------------
library(request)
wcps_rasdaman = function(query=NULL, ip="saocompute.eurac.edu/sincohmap"){
if(is.null(query)){
stop("Provide a query")
}
# build up the url to query the daat
url = "..."
}
wcps_rasdaman()
wcps_rasdaman(query="/rasdaman/ows?&SERVICE=WCS&VERSION=2.0.1&REQUEST=GetCoverage&COVERAGEID=ST_GRIDDED_CLIMATOLOGIES_PRECIPITATION&FORMAT=application/netcdf")
wcps_rasdaman(query="/rasdaman/ows?&SERVICE=WCS&VERSION=2.0.1&REQUEST=GetCoverage&COVERAGEID=ST_GRIDDED_CLIMATOLOGIES_PRECIPITATION&FORMAT=application/netcdf")
ip
wcps_rasdaman(query="/rasdaman/ows?&SERVICE=WCS&VERSION=2.0.1&REQUEST=GetCoverage&COVERAGEID=ST_GRIDDED_CLIMATOLOGIES_PRECIPITATION&FORMAT=application/netcdf")
wcps_rasdaman(query="/rasdaman/ows?&SERVICE=WCS&VERSION=2.0.1&REQUEST=GetCoverage&COVERAGEID=ST_GRIDDED_CLIMATOLOGIES_PRECIPITATION&FORMAT=application/netcdf")
wcps_rasdaman(query="/rasdaman/ows?&SERVICE=WCS&VERSION=2.0.1&REQUEST=GetCoverage&COVERAGEID=ST_GRIDDED_CLIMATOLOGIES_PRECIPITATION&FORMAT=application/netcdf")
wcps_rasdaman(query="hi")
wcps_rasdaman = function(query=NULL, ip="saocompute.eurac.edu"){
if(is.null(query)){
stop("Provide a query")
}
# build up the url to query the daat
url = paste(ip, query)
print(url)
}
wcps_rasdaman(query="hi")
wcps_rasdaman(query="/rasdaman/ows?&SERVICE=WCS&VERSION=2.0.1&REQUEST=GetCoverage&COVERAGEID=ST_GRIDDED_CLIMATOLOGIES_PRECIPITATION&FORMAT=application/netcdf")
wcps_rasdaman = function(query=NULL, ip="saocompute.eurac.edu"){
if(is.null(query)){
stop("Provide a query")
}
# build up the url to query the daat
url = paste(ip, query, collapse = "")
print(url)
}
wcps_rasdaman(query="/rasdaman/ows?&SERVICE=WCS&VERSION=2.0.1&REQUEST=GetCoverage&COVERAGEID=ST_GRIDDED_CLIMATOLOGIES_PRECIPITATION&FORMAT=application/netcdf")
wcps_rasdaman = function(query=NULL, ip="saocompute.eurac.edu"){
if(is.null(query)){
stop("Provide a query")
}
# build up the url to query the daat
url = paste0(ip, query)
print(url)
}
wcps_rasdaman(query="/rasdaman/ows?&SERVICE=WCS&VERSION=2.0.1&REQUEST=GetCoverage&COVERAGEID=ST_GRIDDED_CLIMATOLOGIES_PRECIPITATION&FORMAT=application/netcdf")
library(httr)
ip="saocompute.eurac.edu"
query="/rasdaman/ows?&SERVICE=WCS&VERSION=2.0.1&REQUEST=GetCoverage&COVERAGEID=ST_GRIDDED_CLIMATOLOGIES_PRECIPITATION&FORMAT=application/netcdf"
# build up the url to query the daat
url = paste0(ip, query)
# make a GET request
res = GET(url)
ip="http://saocompute.eurac.edu"
# make a GET request
res = GET(url)
# build up the url to query the daat
url = paste0(ip, query)
url
# make a GET request
res = GET(url)
res
res$status_code
res$content
ip = "/ows?&SERVICE=WCS&VERSION=2.0.1&REQUEST=DescribeCoverage&COVERAGEID=ST_GRIDDED_CLIMATE_SERIES_PRECIPITATION"
# build up the url to query the daat
url = paste0(ip, query)
url
ip="http://saocompute.eurac.edu"
# build up the url to query the daat
url = paste0(ip, query)
url
# make the GET request
res = GET(url)
res
query
query = "/ows?&SERVICE=WCS&VERSION=2.0.1&REQUEST=DescribeCoverage&COVERAGEID=ST_GRIDDED_CLIMATE_SERIES_PRECIPITATION"
# make the GET request
res = GET(url)
# build up the url to query the daat
url = paste0(ip, query)
url
# make the GET request
res = GET(url)
res
query = "/rasdaman/ows?&SERVICE=WCS&VERSION=2.0.1&REQUEST=DescribeCoverage&COVERAGEID=ST_GRIDDED_CLIMATE_SERIES_PRECIPITATION"
# build up the url to query the daat
url = paste0(ip, query)
# make the GET request
res = GET(url)
res
# make a getcoverage request
query = "/rasdaman/ows?&SERVICE=WCS&VERSION=2.0.1&
REQUEST=GetCoverage&COVERAGEID=ST_GRIDDED_CLIMATE_SERIES_PRECIPITATION&FORMAT=application/netcdf"
query
# make a getcoverage request
query = "/rasdaman/ows?&SERVICE=WCS&VERSION=2.0.1&
REQUEST=GetCoverage&COVERAGEID=ST_GRIDDED_CLIMATE_SERIES_
PRECIPITATION&FORMAT=application/netcdf"
query
wcps_rasdaman = function(query=NULL, ip="http://saocompute.eurac.edu"){
# you nee to provide a query
if(is.null(query)){
stop("Provide a query")
}
# build up the url to query the daat
url = paste0(ip, query)
# make the GET request
res = GET(url)
# if the statuscode is not 200
if(!res$status_code == 200){
stop("Something went wrong in the request")
}
}
# make the request
res = wcps_rasdaman(query=query)
query
# make a getcoverage request
query = "/rasdaman/ows?&SERVICE=WCS&VERSION=2.0.1&
REQUEST=GetCoverage&COVERAGEID=ST_GRIDDED_CLIMATE_SERIES_
PRECIPITATION&FORMAT=application/netcdf"
query
# make a getcoverage request
query = "/rasdaman/ows?&SERVICE=WCS&VERSION=2.0.1&REQUEST=GetCoverage&COVERAGEID=ST_GRIDDED_CLIMATE_SERIES_PRECIPITATION&FORMAT=application/netcdf"
wcps_rasdaman = function(query=NULL, ip="http://saocompute.eurac.edu"){
# you nee to provide a query
if(is.null(query)){
stop("Provide a query")
}
# build up the url to query the daat
url = paste0(ip, query)
# make the GET request
res = GET(url)
# if the statuscode is not 200
if(!res$status_code == 200){
stop("Something went wrong in the request")
}
}
# make the request
res = wcps_rasdaman(query=query)
res
wcps_rasdaman = function(query=NULL, ip="http://saocompute.eurac.edu", only.head=F){
# you nee to provide a query
if(is.null(query)){
stop("Provide a query")
}
# build up the url to query the daat
url = paste0(ip, query)
# make the GET request
if(only.head == FALSE){
res = GET(url)
}else{
res = HEAD(url)
}
# if the statuscode is not 200
if(!res$status_code == 200){
stop("Something went wrong in the request")
}
}
# make the request
res = wcps_rasdaman(query=query, only.head = T)
res
# make a getcoverage request
query = "/rasdaman/ows?&SERVICE=WCS&VERSION=2.0.1&REQUEST=GetCoverage&COVERAGEID=ST_GRIDDED_CLIMATE_SERIES_PRECIPITATION&FORMAT=application/netcdf"
# make a getcoverage request
query = "/rasdaman/ows?&SERVICE=WCS&VERSION=2.0.1&REQUEST=GetCoverage&COVERAGEID=ST_GRIDDED_CLIMATE_SERIES_PRECIPITATION&FORMAT=application/netcdf"
wcps_rasdaman = function(query=NULL, ip="http://saocompute.eurac.edu", only.head=FALSE, todisk=FALSE){
# you nee to provide a query
if(is.null(query)){
stop("Provide a query")
}
# build up the url to query the daat
url = paste0(ip, query)
if(!todisk){
# make the GET request
if(only.head == FALSE){
res = GET(url)
}else{
res = HEAD(url)
}
}else{
download.file(url)
}
# if the statuscode is not 200
# better use stop_for_status function
if(!res$status_code == 200){
stop("Something went wrong in the request")
}
}
wcps_rasdaman = function(query=NULL, ip="http://saocompute.eurac.edu", only.head=FALSE, todisk=FALSE){
# you nee to provide a query
if(is.null(query)){
stop("Provide a query")
}
# build up the url to query the daat
url = paste0(ip, query)
if(!todisk){
# make the GET request
if(only.head == FALSE){
res = GET(url)
}else{
res = HEAD(url)
}
}else{
out.path = "./.data/mean_rainfall_southTyrol.nc"
if(!file.exists(out.path)){
dir.create(out.path)
}
download.file(url)
}
# if the statuscode is not 200
# better use stop_for_status function
if(!res$status_code == 200){
stop("Something went wrong in the request")
}
}
# make the request
res = wcps_rasdaman(query=query, only.head = T, todisk = T)
wcps_rasdaman = function(query=NULL, ip="http://saocompute.eurac.edu", only.head=FALSE, todisk=FALSE){
# you nee to provide a query
if(is.null(query)){
stop("Provide a query")
}
# build up the url to query the daat
url = paste0(ip, query)
if(!todisk){
# make the GET request
if(only.head == FALSE){
res = GET(url)
}else{
res = HEAD(url)
}
}else{
out.path = "./.data/mean_rainfall_southTyrol.nc"
if(!file.exists(out.path)){
dir.create(out.path, recursive = T)
}
download.file(url)
}
# if the statuscode is not 200
# better use stop_for_status function
if(!res$status_code == 200){
stop("Something went wrong in the request")
}
}
# make the request
res = wcps_rasdaman(query=query, only.head = T, todisk = T)
out.path = "./.data"
file_path = paste0(out.path, "mean_rainfall_southTyrol.nc")
file_path
file_path = paste0(out.path, "/mean_rainfall_southTyrol.nc")
file_path
wcps_rasdaman = function(query=NULL, ip="http://saocompute.eurac.edu", only.head=FALSE, todisk=FALSE){
# you nee to provide a query
if(is.null(query)){
stop("Provide a query")
}
# build up the url to query the daat
url = paste0(ip, query)
if(!todisk){
# make the GET request
if(only.head == FALSE){
res = GET(url)
}else{
res = HEAD(url)
}
}else{
out.path = "./.data"
if(!file.exists(out.path)){
dir.create(out.path, recursive = T)
}
file_path = paste0(out.path, "/mean_rainfall_southTyrol.nc")
download.file(url. destfile = file_path)
}
# if the statuscode is not 200
# better use stop_for_status function
if(!res$status_code == 200){
stop("Something went wrong in the request")
}
}
wcps_rasdaman = function(query=NULL, ip="http://saocompute.eurac.edu", only.head=FALSE, todisk=FALSE){
# you nee to provide a query
if(is.null(query)){
stop("Provide a query")
}
# build up the url to query the daat
url = paste0(ip, query)
if(!todisk){
# make the GET request
if(only.head == FALSE){
res = GET(url)
}else{
res = HEAD(url)
}
}else{
out.path = "./.data"
if(!file.exists(out.path)){
dir.create(out.path, recursive = T)
}
file_path = paste0(out.path, "/mean_rainfall_southTyrol.nc")
download.file(url, destfile = file_path)
}
# if the statuscode is not 200
# better use stop_for_status function
if(!res$status_code == 200){
stop("Something went wrong in the request")
}
}
# make the request
res = wcps_rasdaman(query=query, only.head = T, todisk = T)
wcps_rasdaman = function(query=NULL, ip="http://saocompute.eurac.edu", only.head=FALSE, todisk=FALSE){
# you nee to provide a query
if(is.null(query)){
stop("Provide a query")
}
# build up the url to query the daat
url = paste0(ip, query)
if(!todisk){
# make the GET request
if(only.head == FALSE){
res = GET(url)
}else{
res = HEAD(url)
}
}else{
out.path = ".data"
if(!file.exists(out.path)){
dir.create(out.path, recursive = T)
}
file_path = paste0(out.path, "/mean_rainfall_southTyrol.nc")
download.file(url, destfile = file_path)
}
# if the statuscode is not 200
# better use stop_for_status function
if(!res$status_code == 200){
stop("Something went wrong in the request")
}
}
# make the request
res = wcps_rasdaman(query=query, only.head = T, todisk = T)
# build up the url to query the daat
url = paste0(ip, query)
ip="http://saocompute.eurac.edu"
# build up the url to query the daat
url = paste0(ip, query)
url
destfile
file_path
